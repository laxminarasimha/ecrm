var express = require("express"),
 router = express.Router(),
 resourceDAO = require("../models/usersDAO.js");
 
router.get("/", function(req, res) {
 resourceDAO.find({},null, {sort:{resourcename: 1}}, function(err, data) {
 if (err) {
 res.send("error");
 return;
 }
 res.send(data);
 });
}).get("/:id", function(req, res) {
 var id = req.params.id;
 resourceDAO.find({ _id: id }, function(err, data) {
 if (err) {
 res.send("error");
 return;
 }
 res.send(data[0]);
 });
}).get("/kinId/:kinId", function(req, res) {
 var kin = req.params.kinId;
 var obj = req.body;
console.log("kin:"+kin);
 resourceDAO.aggregate([
      {
      $project: {
        //Convert EndUser to UpperCase
        "kinId": {
          "$let": {
            //var declaration
            "vars": {
              "kinVar": "$kinId"
            },
            "in": {
              //conversion to upper case
              "$toUpper": "$$kinVar"
            }
          }
        },
       
      }
    },
 
    // Stage 2: match using in operator
    {
      $match: {
        "kinId" : {
          "$in" : [
            kin.toUpperCase()
          ]
        }
      }
    }
 
  ], function(err, data) {
   if (err) {
   res.send("error");
   return;
   }

   console.log(data);
   res.send(data);
   });
}).post("/", function(req, res) {
 var obj = req.body;
 var model = new resourceDAO(obj);
 model.save(function(err,data) {
 if (err) {
 console.log(err);
 res.send("error");
 return;
 }
 
 res.send({"msg":"created","success":true});
 });
}).put("/:id", function(req, res) {
 var id = req.params.id;
 var obj = req.body;
 
resourceDAO.findByIdAndUpdate(id, {
	resourcename: obj.resourcename,
		email: obj.email,
		alias: obj.alias,
		kinId: obj.kinId,
    status:	obj.status,
    isManager:	obj.isManager,
    role:	obj.role
   }, 
function(err) {
 if (err) {
 res.send("error");
 return;
 }
 res.send("updated");
 });
}).delete("/:id", function(req, res) {
 var id = req.params.id;
 resourceDAO.findByIdAndRemove(id, function(err) {
 if (err) {
 res.send("error");
 return;
 }
 res.send("deleted");
 });
});
 
module.exports = router;


